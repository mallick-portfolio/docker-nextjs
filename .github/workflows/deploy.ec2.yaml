name: Deploy Next.js app to EC2

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.15

      - name: Install dependencies and build
        run: |
          npm install
          npm run build

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          cat >>~/.ssh/config <<END
          Host ec2
            HostName ${{ secrets.EC2_HOST }}
            User ${{ secrets.EC2_USER }}
            IdentityFile ~/.ssh/deploy_key
            StrictHostKeyChecking no
          END

      - name: Setup EC2 Environment
        run: |
          ssh ec2 '
            # Install Node.js if not present
            if ! command -v node &> /dev/null; then
              curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -
              sudo apt-get install -y nodejs
            fi

            # Install PM2 globally
            sudo npm install -g pm2

            # Create directory with correct permissions
            sudo mkdir -p /var/www/nextjs
            sudo chown -R ${{ secrets.EC2_USER }}:${{ secrets.EC2_USER }} /var/www/nextjs
            sudo chmod 755 /var/www/nextjs
          '

      - name: Deploy to EC2
        run: |
          # Copy files
          rsync -avz --delete \
            --exclude '.git' \
            --exclude 'node_modules' \
            --exclude '.next' \
            ./ ec2:/var/www/nextjs/
          
          # Start application
          ssh ec2 '
            cd /var/www/nextjs
            
            # Install dependencies and build
            npm install
            NODE_ENV=production npm run build
            
            # Create PM2 ecosystem file
            cat > ecosystem.config.js << EOL
            module.exports = {
              apps: [{
                name: "nextjs",
                script: "node_modules/next/dist/bin/next",
                args: "start",
                env: {
                  PORT: 3000,
                  NODE_ENV: "production",
                  NEXT_TELEMETRY_DISABLED: 1
                }
              }]
            }
            EOL
            
            # Stop existing PM2 process if it exists
            pm2 stop nextjs || true
            pm2 delete nextjs || true
            
            # Start with PM2
            pm2 start ecosystem.config.js
            
            # Save PM2 process list
            pm2 save
            
            # Ensure PM2 starts on system boot
            sudo env PATH=$PATH:/usr/bin pm2 startup systemd -u $USER --hp $HOME
            
            # Restart Nginx
            sudo systemctl restart nginx
          '